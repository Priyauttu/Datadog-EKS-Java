name: Build and Deploy Java App

on:
  push:
    branches: [ "feature_priya" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feature_priya' # Running this job only for pre-master branch

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set Up Java Environment
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      # Step 3: Build the Java Application
      - name: Build with Maven
        working-directory: ./Application
        run: mvn -B package --file pom.xml

      # Step 4: Download Datadog Java Agent
      - name: Download Datadog Java Agent
        working-directory: ./Application
        run: curl -Lo dd-java-agent.jar 'https://dtdg.co/latest-java-tracer'

      # Debug Step 1: Move the Necessary Files to Build Context
      # - name: Move Files for Docker Build
      #   working-directory: ./Application
      #   run: |
      #     mv target/hello-world-app-1.0-SNAPSHOT.jar app.jar


      # Debug Step 2: List Application Directory
      - name: List Application Directory
        working-directory: ./Application
        run: ls -R

      # Debug step 3: Set File Permissions
      # - name: Set File Permissions
      #   working-directory: ./Application
      #   run: chmod 644 Dockerfile app.jar dd-java-agent.jar

      # Step 5: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Build Docker Image
      - name: Build Docker Image
        working-directory: ./Application
        run: |
          docker build --no-cache -t ghcr.io/${{ github.repository_owner }}/hello-world-app:${{ github.run_number }} -f Dockerfile .

      # Step 7: Push Docker Image to GitHub Packages
      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/hello-world-app:${{github.run_number}}

  deploy:
              runs-on: ubuntu-latest
              needs: [build-and-push]
      
              steps:
              - uses: actions/checkout@v2
      
              - name: AWS Credentials
                uses: aws-actions/configure-aws-credentials@v1
                with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-south-1
      
              - name: helm deploy
                uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
                with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS__KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-2
                  cluster-name: arcade-eks
                  config-files: ./Application/java-helm/values.yaml
                  chart-path: ./Application/java-helm
                  version: ${{ github.run_number }}
                  namespace: java
                  name: java-release